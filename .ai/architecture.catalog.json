{
  "architectures": [
    {
      "name": "layered",
      "description": "A layered architecture for simple few features applications",
      "scaffolding": [
        "application",
        "domain",
        "system"
      ],
      "guardrails": "Dependencies go top to bottom (application -> domain -> system)"
    },
    {
      "name": "modular",
      "description": "A modular architecture for complex applications with many features",
      "scaffolding": [
        {
          "feature-1": [
            "application",
            "domain",
            "system"
          ]
        },
        {
          "feature-9": [
            "application",
            "domain",
            "system"
          ]
        }
      ],
      "guardrails": "Dependencies go top to bottom (application -> domain -> system), inside and between feature modules"
    }
  ],
  "artifacts": [
    {
      "name": "adapter",
      "description": "Wraps an external dependency."
    },
    {
      "name": "command",
      "description": "Executes a task based on user input."
    },
    {
      "name": "component",
      "description": "A reusable UI building block."
    },
    {
      "name": "controller",
      "description": "Redirects logic based on user input."
    },
    {
      "name": "mapper",
      "description": "Maps data between different formats."
    },
    {
      "name": "repository",
      "description": "Implements a data access logic."
    },
    {
      "name": "service",
      "description": "Implements a business logic."
    },
    {
      "name": "type",
      "description": "Defines types and defaults."
    },
    {
      "name": "util",
      "description": "A utility module."
    },
    {
      "name": "validator",
      "description": "Validates data."
    }
  ],
  "archetypes": [
    {
      "name": "node-cli",
      "tier": "frontend",
      "ux": "cli",
      "description": "A Node.js CLI application",
      "language": "Typescript",
      "framework": "Node.js",
      "architecture": "layered",
      "paradigm": "functional"
    }
  ]
}